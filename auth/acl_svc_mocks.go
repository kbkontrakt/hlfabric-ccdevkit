// Code generated by MockGen. DO NOT EDIT.
// Source: acl_svc.go

// Package auth is a generated GoMock package.
package auth

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockACLService is a mock of ACLService interface
type MockACLService struct {
	ctrl     *gomock.Controller
	recorder *MockACLServiceMockRecorder
}

// MockACLServiceMockRecorder is the mock recorder for MockACLService
type MockACLServiceMockRecorder struct {
	mock *MockACLService
}

// NewMockACLService creates a new mock instance
func NewMockACLService(ctrl *gomock.Controller) *MockACLService {
	mock := &MockACLService{ctrl: ctrl}
	mock.recorder = &MockACLServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockACLService) EXPECT() *MockACLServiceMockRecorder {
	return m.recorder
}

// IsAllow mocks base method
func (m *MockACLService) IsAllow(accessName string) error {
	ret := m.ctrl.Call(m, "IsAllow", accessName)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsAllow indicates an expected call of IsAllow
func (mr *MockACLServiceMockRecorder) IsAllow(accessName interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsAllow", reflect.TypeOf((*MockACLService)(nil).IsAllow), accessName)
}
